'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _lodashObjectPick = require('lodash/object/pick');

var _lodashObjectPick2 = _interopRequireDefault(_lodashObjectPick);

var _lodashObjectOmit = require('lodash/object/omit');

var _lodashObjectOmit2 = _interopRequireDefault(_lodashObjectOmit);

var _tcombReact = require('tcomb-react');

var PropTypes = {
  /**
   * FlexView content
   */
  children: _tcombReact.t.ReactChildren,
  /**
   * flex-direction: column
   */
  column: _tcombReact.t.maybe(_tcombReact.t.Boolean),
  /**
   * set flex: 0 0 100% NOTE: each property may be overwritten by their own props (grow, shrink, basis)
   */
  auto: _tcombReact.t.maybe(_tcombReact.t.Boolean),
  /**
   * align content vertically
   */
  vAlignContent: _tcombReact.t.maybe(_tcombReact.t.enums.of(['top', 'center', 'bottom'])),
  /**
   * align content horizontally
   */
  hAlignContent: _tcombReact.t.maybe(_tcombReact.t.enums.of(['left', 'center', 'right'])),
  /**
   * margin-left property ("auto" to align self right)
   */
  marginLeft: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * margin-top property ("auto" to align self bottom)
   */
  marginTop: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * margin-right property ("auto" to align self left)
   */
  marginRight: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * margin-bottom property ("auto" to align self top)
   */
  marginBottom: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * flex-grow property (for parent primary axis)
   */
  grow: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.Boolean, _tcombReact.t.Number])),
  /**
   * flex-shrink property
   */
  shrink: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.Boolean, _tcombReact.t.Number])),
  /**
   * flex-basis property
   */
  basis: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * wrap content
   */
  wrap: _tcombReact.t.maybe(_tcombReact.t.Boolean),
  /**
   * height property (for parent secondary axis)
   */
  height: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * width property (for parent secondary axis)
   */
  width: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  /**
   * DEPRECATED: use "basis" instead
   */
  flexBasis: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),
  className: _tcombReact.t.maybe(_tcombReact.t.String),
  style: _tcombReact.t.maybe(_tcombReact.t.Object)
};

var FlexView = (function (_React$Component) {
  _inherits(FlexView, _React$Component);

  function FlexView() {
    var _this = this;

    _classCallCheck(this, _FlexView);

    _React$Component.apply(this, arguments);

    this.getGrow = function () {
      var grow = _this.props.grow;

      if (typeof grow === 'number') {
        return grow;
      } else if (grow) {
        return 1;
      } else {
        return 0; // auto === true or default
      }
    };

    this.getShrink = function () {
      var _props = _this.props;
      var shrink = _props.shrink;
      var basis = _props.basis;
      var flexBasis = _props.flexBasis;
      var auto = _props.auto;

      if (typeof shrink === 'number') {
        return shrink;
      } else if (shrink) {
        return 1;
      } else if (shrink === false) {
        return 0;
      }

      if (basis || flexBasis || auto) {
        return 0;
      } else {
        return 1; // grow === true or default
      }
    };

    this.getBasis = function () {
      var _props2 = _this.props;
      var grow = _props2.grow;
      var shrink = _props2.shrink;
      var basis = _props2.basis;
      var flexBasis = _props2.flexBasis;
      var auto = _props2.auto;

      var _basis = basis || flexBasis;
      if (_basis) {
        var suffix = typeof _basis === 'number' ? 'px' : '';
        return _basis + suffix;
      } else if (grow && !shrink && !auto) {
        return '100%';
      } else {
        return 'auto'; // safe default
      }
    };

    this.getFlexStyle = function () {
      var grow = _this.getGrow();
      var shrink = _this.getShrink();
      var basis = _this.getBasis();
      var values = grow + ' ' + shrink + ' ' + basis;
      return {
        WebkitBoxFlex: values,
        MozBoxFlex: values,
        msFlex: values,
        WebkitFlex: values,
        flex: values
      };
    };

    this.getStyle = function () {
      var style = _lodashObjectPick2['default'](_this.props, ['width', 'height', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom']);
      return _extends({}, _this.getFlexStyle(), style, _this.props.style);
    };

    this.getContentAlignmentClasses = function () {
      var vPrefix = _this.props.column ? 'justify-content-' : 'align-content-';
      var hPrefix = _this.props.column ? 'align-content-' : 'justify-content-';

      var vAlignContentClasses = {
        top: vPrefix + 'start',
        center: vPrefix + 'center',
        bottom: vPrefix + 'end'
      };

      var hAlignContentClasses = {
        left: hPrefix + 'start',
        center: hPrefix + 'center',
        right: hPrefix + 'end'
      };

      var vAlignContent = vAlignContentClasses[_this.props.vAlignContent];
      var hAlignContent = hAlignContentClasses[_this.props.hAlignContent];

      return _classnames2['default'](vAlignContent, hAlignContent);
    };

    this.getClasses = function () {
      var direction = _this.props.column ? 'flex-column' : 'flex-row';
      var contentAlignment = _this.getContentAlignmentClasses();
      var wrap = _this.props.wrap && 'flex-wrap';
      return _classnames2['default']('react-flex-view', direction, contentAlignment, wrap, _this.props.className);
    };
  }

  FlexView.prototype.render = function render() {
    var className = this.getClasses();
    var style = this.getStyle();
    var props = _lodashObjectOmit2['default'](this.props, Object.keys(PropTypes));
    return _react2['default'].createElement(
      'div',
      _extends({ className: className, style: style }, props),
      this.props.children
    );
  };

  var _FlexView = FlexView;
  FlexView = _tcombReact.props(PropTypes, { strict: false })(FlexView) || FlexView;
  return FlexView;
})(_react2['default'].Component);

exports['default'] = FlexView;
module.exports = exports['default'];